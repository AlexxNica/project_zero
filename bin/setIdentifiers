#! /usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import print_function

import fontforge, sys
import ufoLib
from ufoLib.pointPen import AbstractPointPen
print("fontforge.version: ", fontforge.version())

class RecordingPointPen(AbstractPointPen):
    def __init__(self):
        self.commands = []
        self.contours = []
        self.hasPath = False

    def beginPath(self, *args, **kwargs):
        self.hasPath = True
        command = ('beginPath', args, kwargs)
        self.contours.append(command)
        self.commands.append(command)

    def endPath(self, *args, **kwargs):
        self.hasPath = False
        command = ('endPath', args, kwargs)
        self.commands.append(command)

    def addPoint(self, *args, **kwargs):
        assert self.hasPath;
        command = ('addPoint', args, kwargs)
        self.commands.append(command)

    def addComponent(self, *args, **kwargs):
        assert not self.hasPath;
        command = ('addComponent', args, kwargs)
        self.commands.append(command)
        print (command);
    
    def replay(self, pen):
        for command in self.commands:
            getattr(pen, command[0])(*command[1], **command[2])

if __name__ == '__main__':
    fontforgeFontPath = sys.argv[1]
    metapolatorProject = sys.argv[2]
    targetLayer = sys.argv[3]
    if len(sys.argv) >= 5:
        glyphNames = [name.strip() for name in sys.argv[4].split(',')]
    else:
        glyphNames = None
    print('Importing FontForge contour names as ufo identifiers ... ');
    # print('\tSource:', fontforgeFontPath)
    # print('\tTarget:', metapolatorProject)
    # print('\tTarget Layer:', targetLayer)
    # print('\tGlyph Names: ', glyphNames or "*all*")
    
    ffont = fontforge.open(fontforgeFontPath)
    ufo = ufoLib.UFOReader(metapolatorProject)
    ufoLayer = ufo.getGlyphSet(targetLayer);
    
    
    glyphs = glyphNames or ffont;
    for glyphName in glyphs:
        fglyph = ffont[glyphName];
        uglyph = None
        for i, contour in enumerate(fglyph.foreground):
            if not contour.name: continue
            if uglyph is None:
                uglyph = ufoLayer[glyphName];
                commands = RecordingPointPen();
                uglyph.drawPoints(commands);
                contours = commands.contours;
            contours[i][2]['identifier'] = unicode(contour.name);
            print(' - glyph "{0}" contour: {1} id: "{2}"'.format(glyphName, i, contour.name))
        if uglyph:
            ufoLayer.writeGlyph(glyphName, uglyph, commands.replay, 2);
    print('OK!')
